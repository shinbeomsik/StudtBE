<div class="card m-2" id="comments-new"> <!-- class 속성 수정, id 속성 추가 -->
    <div class="card-body">
    	 <!-- 댓글 작성 폼 -->  <!-- 주석 추가 -->
        <form> 
            <div class="mb-3"> <!--닉네임 입력 폼 만들기  -->
            	<label class="form-label">닉네임</label>
            	<input type="text" class="form-control" id="new-comment-nickname">
            </div>
            <div class="mb-3"> <!--댓글 본문 입력 폼 만들기  -->
            	<label class="form-label">댓글 내용</label>
            	<textarea class="form-control" rows="3" id="new-comment-body"></textarea>
            	<!-- 히든 인풋  -->
            	{{#article}}
            		<input type="hidden" id="new-comment-article-id" value="{{id}}">
            	{{/article}}
            </div>
            <!--전송 버튼  -->
           <button type="button" class="btn btn-primary" id="comment-create-btn">Submit</button>
        </form>
    </div>
</div>
<script>
{
	//댓글 생성 버튼 변수화
	const commentCreateBtn = document.querySelector("#comment-create-btn");
	
	//댓글 클릭 이벤트 감지
	commentCreateBtn.addEventListener("click", function() { 
		console.log("버튼을 클릭");
		const comment = {
			// 새 댓글의 닉네임
			nickname: document.querySelector(" #new-comment-nickname").value,
			// 새 댓글의 본문
			body: document.querySelector(" #new-comment-body").value,
			// 부모 게시글의 id
			articleId: document.querySelector(" #new-comment-article-id").value
		}
		 console.log(comment);
		// fetch() - 비동기 통신을 위한 API
		const url = "/api/articles/" + comment.articleId + "/comments";
	
		fetch(url, {                        // fetch() 함수 작성
		  	method: "POST",               // POST 요청 
		  	headers: {                    // 전송 본문의 데이터 타입(JSON) 정보
		    	"Content-Type": "application/json"
		  	},
		 	 body: JSON.stringify(comment) // comment 객체를 JSON 문자열로 변환해 전송
		}).then(response => {
		  	// HTTP 응답 코드에 따른 메시지 출력
		  	const msg = (response.ok) ? "댓글이 등록됐습니다." : "댓글 등록 실패..!";
		  	alert(msg); 
		  	// 현재 페이지 새로 고침
			  window.location.reload();                                     
		});
	});
}
</script>